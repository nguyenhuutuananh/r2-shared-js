{"version":3,"file":"transformer-html.js","sourceRoot":"","sources":["../../../../src/transform/transformer-html.ts"],"names":[],"mappings":";;AASA,wEAA+F;AAE/F,mCAAmC;AAGnC,gCAAgC;AAChC,MAAM,KAAK,GAAG,MAAM,CAAC,sCAAsC,CAAC,CAAC;AAE7D,MAAa,eAAe;IAIxB,YAAY,mBAAmF;QAC3F,IAAI,CAAC,eAAe,GAAG,mBAAmB,CAAC;IAC/C,CAAC;IAEM,QAAQ,CAAC,WAAwB,EAAE,IAAU;QAEhD,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;YACvB,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC7B;QAED,IAAI,SAAS,KAAK,WAAW,IAAI,SAAS,KAAK,uBAAuB,EAAE;YACpE,MAAM,gBAAgB,GAAG,WAAW,CAAC,QAAQ,IAAI,WAAW,CAAC,QAAQ,CAAC,SAAS;mBACxE,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC;YAC7C,MAAM,UAAU,GAAG,gBAAgB,IAAI,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,KAAK,OAAO,CAAC;YAEzF,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YACpE,MAAM,WAAW,GAAG,iBAAiB,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,OAAO,CAAC;YAE5E,IAAI,WAAW,IAAI,UAAU,EAAE;gBAC3B,OAAO,KAAK,CAAC;aAChB;YAED,OAAO,IAAI,CAAC;SACf;QAED,OAAO,KAAK,CAAC;IACjB,CAAC;IAEM,KAAK,CAAC,eAAe,CACxB,WAAwB,EAAE,IAAU,EACpC,MAAwB,EACxB,0BAAmC,EACnC,iBAAyB,EAAE,eAAuB;QAElD,IAAI,IAAY,CAAC;QACjB,IAAI;YACA,IAAI,GAAG,MAAM,mCAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACrD;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC9B;QAED,IAAI,IAAY,CAAC;QACjB,IAAI;YACA,IAAI,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;SAC9D;QAAC,OAAO,GAAG,EAAE;YACV,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC9B;QAED,MAAM,GAAG,GAAqB;YAC1B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK,EAAE,KAAK,IAAI,EAAE;gBACd,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAChC,CAAC;YACD,MAAM,EAAE,4BAAc,CAAC,IAAI,CAAC;SAC/B,CAAC;QACF,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAEO,KAAK,CAAC,eAAe,CAAC,WAAwB,EAAE,IAAU,EAAE,IAAY;QAE5E,IAAI;YACA,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAClC,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;YAC1D,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAC7C;QAAC,OAAO,GAAG,EAAE;YACV,KAAK,CAAC,mCAAmC,CAAC,CAAC;YAC3C,KAAK,CAAC,GAAG,CAAC,CAAC;YACX,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAChC;IACL,CAAC;CACJ;AA3ED,0CA2EC","sourcesContent":["// ==LICENSE-BEGIN==\n// Copyright 2017 European Digital Reading Lab. All rights reserved.\n// Licensed to the Readium Foundation under one or more contributor license agreements.\n// Use of this source code is governed by a BSD-style license\n// that can be found in the LICENSE file exposed on Github (readium) in the project repository.\n// ==LICENSE-END==\n\nimport { Publication } from \"@models/publication\";\nimport { Link } from \"@models/publication-link\";\nimport { bufferToStream, streamToBufferPromise } from \"@r2-utils-js/_utils/stream/BufferUtils\";\nimport { IStreamAndLength } from \"@r2-utils-js/_utils/zip/zip\";\nimport * as mime from \"mime-types\";\nimport { ITransformer } from \"./transformer\";\n\nimport * as debug_ from \"debug\";\nconst debug = debug_(\"r2:shared#transform/transformer-html\");\n\nexport class TransformerHTML implements ITransformer {\n\n    private readonly transformString: (publication: Publication, link: Link, data: string) => string;\n\n    constructor(transformerFunction: (publication: Publication, link: Link, data: string) => string) {\n        this.transformString = transformerFunction;\n    }\n\n    public supports(publication: Publication, link: Link): boolean {\n\n        let mediaType = mime.lookup(link.Href);\n        if (link && link.TypeLink) {\n            mediaType = link.TypeLink;\n        }\n\n        if (mediaType === \"text/html\" || mediaType === \"application/xhtml+xml\") {\n            const pubDefinesLayout = publication.Metadata && publication.Metadata.Rendition\n                && publication.Metadata.Rendition.Layout;\n            const pubIsFixed = pubDefinesLayout && publication.Metadata.Rendition.Layout === \"fixed\";\n\n            const linkDefinesLayout = link.Properties && link.Properties.Layout;\n            const linkIsFixed = linkDefinesLayout && link.Properties.Layout === \"fixed\";\n\n            if (linkIsFixed || pubIsFixed) {\n                return false;\n            }\n\n            return true; // pass: reflow doc\n        }\n\n        return false;\n    }\n\n    public async transformStream(\n        publication: Publication, link: Link,\n        stream: IStreamAndLength,\n        _isPartialByteRangeRequest: boolean,\n        _partialByteBegin: number, _partialByteEnd: number): Promise<IStreamAndLength> {\n\n        let data: Buffer;\n        try {\n            data = await streamToBufferPromise(stream.stream);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n\n        let buff: Buffer;\n        try {\n            buff = await this.transformBuffer(publication, link, data);\n        } catch (err) {\n            return Promise.reject(err);\n        }\n\n        const sal: IStreamAndLength = {\n            length: buff.length,\n            reset: async () => {\n                return Promise.resolve(sal);\n            },\n            stream: bufferToStream(buff),\n        };\n        return Promise.resolve(sal);\n    }\n\n    private async transformBuffer(publication: Publication, link: Link, data: Buffer): Promise<Buffer> {\n\n        try {\n            const str = data.toString(\"utf8\");\n            const str_ = this.transformString(publication, link, str);\n            return Promise.resolve(Buffer.from(str_));\n        } catch (err) {\n            debug(\"TransformerHTML fail => no change\");\n            debug(err);\n            return Promise.resolve(data); //  no change\n        }\n    }\n}\n"]}