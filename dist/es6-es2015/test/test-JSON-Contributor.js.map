{"version":3,"file":"test-JSON-Contributor.js","sourceRoot":"","sources":["../../../test/test-JSON-Contributor.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from \"path\";\n\nimport { Metadata } from \"@models/metadata\";\nimport { Contributor } from \"@models/metadata-contributor\";\nimport { IStringMap } from \"@models/metadata-multilang\";\nimport { setLcpNativePluginPath } from \"@r2-lcp-js/parser/epub/lcp\";\nimport test from \"ava\";\nimport { ExecutionContext } from \"ava\";\nimport { JSON as TAJSON } from \"ta-json-x\";\n\nimport {\n    initGlobalConverters_GENERIC,\n    initGlobalConverters_SHARED,\n} from \"../src/init-globals\";\nimport {\n    checkType,\n    checkType_Array,\n    checkType_Number,\n    checkType_Object,\n    checkType_String,\n    inspect,\n    logJSON,\n} from \"./helpers\";\n\ninitGlobalConverters_SHARED();\ninitGlobalConverters_GENERIC();\n\nsetLcpNativePluginPath(path.join(process.cwd(), \"LCP\", \"lcp.node\"));\n\n// ==========================\n\nconst contributor1NameStr = \"theName1\";\nconst contributor1Id = \"theID1\";\nconst contributor1Pos = 1;\nconst contributor1 = new Contributor();\ncontributor1.Name = contributor1NameStr;\ncontributor1.Identifier = contributor1Id;\ncontributor1.Position = contributor1Pos;\nconst contributor1RoleArr = [\"theRole1-A\", \"theRole1-B\"];\ncontributor1.Role = contributor1RoleArr;\n\nconst contributor2NameMapLang = \"en\";\nconst contributor2NameMapVal = \"theName2\";\nconst contributor2NameMap = {} as IStringMap;\ncontributor2NameMap[contributor2NameMapLang] = contributor2NameMapVal;\nconst contributor2NameObj = { name: contributor2NameMap };\nconst contributor2Id = \"theID2\";\nconst contributor2 = new Contributor();\ncontributor2.Name = contributor2NameMap;\ncontributor2.Identifier = contributor2Id;\nconst contributor2RoleStr = \"theRole2\";\ncontributor2.Role = [contributor2RoleStr];\n\nconst checkContributor1Name = (t: ExecutionContext, obj: string | IStringMap) => {\n\n    checkType_String(t, obj);\n    t.is(obj, contributor1NameStr);\n};\n\nconst checkContributor2Name = (t: ExecutionContext, obj: string | IStringMap) => {\n\n    checkType_Object(t, obj);\n    checkType_String(t, (obj as IStringMap)[contributor2NameMapLang]);\n    t.is((obj as IStringMap)[contributor2NameMapLang], contributor2NameMapVal);\n};\n\nconst checkJsonContributor1 = (t: ExecutionContext, obj: any) => {\n\n    checkType_Object(t, obj);\n\n    checkContributor1Name(t, obj.name);\n\n    checkType_String(t, obj.identifier);\n    t.is(obj.identifier, contributor1Id);\n\n    checkType_Number(t, obj.position);\n    t.is(obj.position, contributor1Pos);\n\n    checkType_Array(t, obj.role);\n    t.is(obj.role.length, contributor1RoleArr.length);\n    t.is(obj.role[0], contributor1RoleArr[0]);\n    t.is(obj.role[1], contributor1RoleArr[1]);\n};\n\nconst checkJsonContributor2 = (t: ExecutionContext, obj: any) => {\n\n    checkType_Object(t, obj);\n\n    checkContributor2Name(t, obj.name);\n\n    checkType_String(t, obj.identifier);\n    t.is(obj.identifier, contributor2Id);\n\n    checkType_String(t, obj.role);\n    t.is(obj.role, contributor2RoleStr);\n};\n\nconst checkObjContributor1 = (t: ExecutionContext, obj: Contributor) => {\n\n    checkType(t, obj, Contributor);\n\n    checkContributor1Name(t, obj.Name);\n\n    checkType_String(t, obj.Identifier);\n    t.is(obj.Identifier, contributor1Id);\n\n    checkType_Number(t, obj.Position);\n    t.is(obj.Position, contributor1Pos);\n\n    checkType_Array(t, obj.Role);\n    t.is(obj.Role.length, 2);\n    t.is(obj.Role[0], contributor1RoleArr[0]);\n    t.is(obj.Role[1], contributor1RoleArr[1]);\n};\n\nconst checkObjContributor2 = (t: ExecutionContext, obj: Contributor) => {\n\n    checkType(t, obj, Contributor);\n\n    checkContributor2Name(t, obj.Name);\n\n    checkType_String(t, obj.Identifier);\n    t.is(obj.Identifier, contributor2Id);\n\n    checkType_Array(t, obj.Role);\n    t.is(obj.Role.length, 1);\n    t.is(obj.Role[0], contributor2RoleStr);\n};\n\n// ==========================\n\ntest(\"JSON SERIALIZE: Metadata.Imprint => Contributor[]\", (t) => {\n\n    const b = new Metadata();\n    b.Imprint = [];\n    b.Imprint.push(contributor1);\n    b.Imprint.push(contributor2);\n    inspect(b);\n\n    const json = TAJSON.serialize(b);\n    logJSON(json);\n\n    checkType_Array(t, json.imprint);\n    t.is(json.imprint.length, 2);\n\n    checkJsonContributor1(t, json.imprint[0]);\n    checkJsonContributor2(t, json.imprint[1]);\n});\n\ntest(\"JSON SERIALIZE: Metadata.Imprint => Contributor[1] collapse-array\", (t) => {\n\n    const b = new Metadata();\n    b.Imprint = [contributor1];\n    inspect(b);\n\n    const json = TAJSON.serialize(b);\n    // // (normalizes single-item array to the item value itself)\n    // traverseJsonObjects(json,\n    //     (obj, parent, keyInParent) => {\n    //         if (parent && obj instanceof Array && obj.length === 1) {\n    //             parent[keyInParent] = obj[0];\n    //         }\n    //     });\n    logJSON(json);\n\n    checkJsonContributor1(t, json.imprint);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor[]\", (t) => {\n\n    const json: any = {};\n    json.imprint = [\n        { name: contributor1NameStr, identifier: contributor1Id, position: contributor1Pos, role: contributor1RoleArr },\n        { name: contributor2NameMap, identifier: contributor2Id, role: contributor2RoleStr },\n    ];\n    logJSON(json);\n\n    const b: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(b);\n\n    checkType_Array(t, b.Imprint);\n    t.is(b.Imprint.length, 2);\n\n    checkObjContributor1(t, b.Imprint[0]);\n    checkObjContributor2(t, b.Imprint[1]);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor[1]\", (t) => {\n\n    const json: any = {};\n    json.imprint = [\n        { name: contributor1NameStr, identifier: contributor1Id, position: contributor1Pos, role: contributor1RoleArr },\n    ];\n    logJSON(json);\n\n    const b: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(b);\n\n    checkType_Array(t, b.Imprint);\n    t.is(b.Imprint.length, 1);\n\n    checkObjContributor1(t, b.Imprint[0]);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor\", (t) => {\n\n    const json: any = {};\n    // tslint:disable-next-line:max-line-length\n    json.imprint = { name: contributor1NameStr, identifier: contributor1Id, position: contributor1Pos, role: contributor1RoleArr };\n    logJSON(json);\n\n    const b: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(b);\n\n    checkType_Array(t, b.Imprint);\n    t.is(b.Imprint.length, 1);\n\n    checkObjContributor1(t, b.Imprint[0]);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor NAME []\", (t) => {\n\n    const json: any = {};\n    json.imprint = [contributor1NameStr, contributor2NameObj];\n    logJSON(json);\n\n    const b: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(b);\n\n    checkType_Array(t, b.Imprint);\n    t.is(b.Imprint.length, 2);\n\n    checkType(t, b.Imprint[0], Contributor);\n    checkContributor1Name(t, b.Imprint[0].Name);\n\n    checkType(t, b.Imprint[1], Contributor);\n    checkContributor2Name(t, b.Imprint[1].Name);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor NAME [1] A\", (t) => {\n\n    const json: any = {};\n    json.imprint = [contributor1NameStr];\n    logJSON(json);\n\n    const b: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(b);\n\n    checkType_Array(t, b.Imprint);\n    t.is(b.Imprint.length, 1);\n\n    checkType(t, b.Imprint[0], Contributor);\n    checkContributor1Name(t, b.Imprint[0].Name);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor NAME [1] B\", (t) => {\n\n    const json: any = {};\n    json.imprint = [contributor2NameObj];\n    logJSON(json);\n\n    const b: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(b);\n\n    checkType_Array(t, b.Imprint);\n    t.is(b.Imprint.length, 1);\n\n    checkType(t, b.Imprint[0], Contributor);\n    checkContributor2Name(t, b.Imprint[0].Name);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor NAME A\", (t) => {\n\n    const json: any = {};\n    json.imprint = contributor1NameStr;\n    logJSON(json);\n\n    const b: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(b);\n\n    checkType_Array(t, b.Imprint);\n    t.is(b.Imprint.length, 1);\n\n    checkType(t, b.Imprint[0], Contributor);\n    checkContributor1Name(t, b.Imprint[0].Name);\n});\n\ntest(\"JSON DESERIALIZE: Metadata.Imprint => Contributor NAME B\", (t) => {\n\n    const json: any = {};\n    json.imprint = contributor2NameObj;\n    logJSON(json);\n\n    const b: Metadata = TAJSON.deserialize<Metadata>(json, Metadata);\n    inspect(b);\n\n    checkType_Array(t, b.Imprint);\n    t.is(b.Imprint.length, 1);\n\n    checkType(t, b.Imprint[0], Contributor);\n    checkContributor2Name(t, b.Imprint[0].Name);\n});\n"]}